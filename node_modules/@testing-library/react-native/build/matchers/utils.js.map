{"version":3,"file":"utils.js","names":["_jestMatcherUtils","require","_prettyFormat","_interopRequireWildcard","_redent","_interopRequireDefault","_componentTree","_formatDefault","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","HostElementTypeError","Error","constructor","received","matcherFn","context","captureStackTrace","withType","printWithType","printReceived","e","message","matcherHint","isNot","name","RECEIVED_COLOR","join","checkHostElement","element","isHostElement","formatElement","children","props","childrenToDisplay","undefined","redent","prettyFormat","$$typeof","Symbol","for","type","defaultMapProps","plugins","ReactTestComponent","ReactElement","printFunctionName","printBasicPrototype","highlight","formatElementArray","elements","length","map","formatMessage","matcher","expectedLabel","expectedValue","receivedLabel","receivedValue","EXPECTED_COLOR","formatValue","value","stringify"],"sources":["../../src/matchers/utils.tsx"],"sourcesContent":["import { ReactTestInstance } from 'react-test-renderer';\nimport {\n  EXPECTED_COLOR,\n  RECEIVED_COLOR,\n  matcherHint,\n  printWithType,\n  printReceived,\n  stringify,\n} from 'jest-matcher-utils';\nimport prettyFormat, { plugins } from 'pretty-format';\nimport redent from 'redent';\nimport { isHostElement } from '../helpers/component-tree';\nimport { defaultMapProps } from '../helpers/format-default';\n\nclass HostElementTypeError extends Error {\n  constructor(\n    received: unknown,\n    matcherFn: jest.CustomMatcher,\n    context: jest.MatcherContext\n  ) {\n    super();\n\n    /* istanbul ignore next */\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, matcherFn);\n    }\n\n    let withType = '';\n    try {\n      withType = printWithType('Received', received, printReceived);\n      /* istanbul ignore next */\n    } catch (e) {\n      // Deliberately empty.\n    }\n\n    this.message = [\n      matcherHint(\n        `${context.isNot ? '.not' : ''}.${matcherFn.name}`,\n        'received',\n        ''\n      ),\n      '',\n      `${RECEIVED_COLOR('received')} value must be a host element.`,\n      withType,\n    ].join('\\n');\n  }\n}\n\n/**\n * Throws HostElementTypeError if passed element is not a host element.\n *\n * @param element ReactTestInstance to check.\n * @param matcherFn Matcher function calling the check used for formatting error.\n * @param context Jest matcher context used for formatting error.\n */\nexport function checkHostElement(\n  element: ReactTestInstance | null | undefined,\n  matcherFn: jest.CustomMatcher,\n  context: jest.MatcherContext\n): asserts element is ReactTestInstance {\n  if (!isHostElement(element)) {\n    throw new HostElementTypeError(element, matcherFn, context);\n  }\n}\n\n/***\n * Format given element as a pretty-printed string.\n *\n * @param element Element to format.\n */\nexport function formatElement(element: ReactTestInstance | null) {\n  if (element == null) {\n    return '  null';\n  }\n\n  const { children, ...props } = element.props;\n  const childrenToDisplay =\n    typeof children === 'string' ? [children] : undefined;\n\n  return redent(\n    prettyFormat(\n      {\n        // This prop is needed persuade the prettyFormat that the element is\n        // a ReactTestRendererJSON instance, so it is formatted as JSX.\n        $$typeof: Symbol.for('react.test.json'),\n        type: element.type,\n        props: defaultMapProps(props),\n        children: childrenToDisplay,\n      },\n      {\n        plugins: [plugins.ReactTestComponent, plugins.ReactElement],\n        printFunctionName: false,\n        printBasicPrototype: false,\n        highlight: true,\n      }\n    ),\n    2\n  );\n}\n\nexport function formatElementArray(elements: ReactTestInstance[]) {\n  if (elements.length === 0) {\n    return '  (no elements)';\n  }\n\n  return redent(elements.map(formatElement).join('\\n'), 2);\n}\n\nexport function formatMessage(\n  matcher: string,\n  expectedLabel: string,\n  expectedValue: string | RegExp,\n  receivedLabel: string,\n  receivedValue: string | null | undefined\n) {\n  return [\n    `${matcher}\\n`,\n    `${expectedLabel}:\\n${EXPECTED_COLOR(\n      redent(formatValue(expectedValue), 2)\n    )}`,\n    `${receivedLabel}:\\n${RECEIVED_COLOR(\n      redent(formatValue(receivedValue), 2)\n    )}`,\n  ].join('\\n');\n}\n\nfunction formatValue(value: unknown) {\n  return typeof value === 'string' ? value : stringify(value);\n}\n"],"mappings":"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"}