/// <reference types="jest" />
/**
 * Experimental values:
 * - iOS: `{"changedTouches": [[Circular]], "identifier": 1, "locationX": 253, "locationY": 30.333328247070312, "pageX": 273, "pageY": 141.3333282470703, "target": 75, "timestamp": 875928682.0450834, "touches": [[Circular]]}`
 * - Android: `{"changedTouches": [[Circular]], "identifier": 0, "locationX": 160, "locationY": 40.3636360168457, "pageX": 180, "pageY": 140.36363220214844, "target": 53, "targetSurface": -1, "timestamp": 10290805, "touches": [[Circular]]}`
 */
declare function touch(): {
    persist: jest.Mock<any, any, any>;
    currentTarget: {
        measure: jest.Mock<any, any, any>;
    };
    nativeEvent: {
        changedTouches: never[];
        identifier: number;
        locationX: number;
        locationY: number;
        pageX: number;
        pageY: number;
        target: number;
        timestamp: number;
        touches: never[];
    };
};
export declare const CommonEventBuilder: {
    touch: typeof touch;
    responderGrant: () => {
        dispatchConfig: {
            registrationName: string;
        };
        persist: jest.Mock<any, any, any>;
        currentTarget: {
            measure: jest.Mock<any, any, any>;
        };
        nativeEvent: {
            changedTouches: never[];
            identifier: number;
            locationX: number;
            locationY: number;
            pageX: number;
            pageY: number;
            target: number;
            timestamp: number;
            touches: never[];
        };
    };
    responderRelease: () => {
        dispatchConfig: {
            registrationName: string;
        };
        persist: jest.Mock<any, any, any>;
        currentTarget: {
            measure: jest.Mock<any, any, any>;
        };
        nativeEvent: {
            changedTouches: never[];
            identifier: number;
            locationX: number;
            locationY: number;
            pageX: number;
            pageY: number;
            target: number;
            timestamp: number;
            touches: never[];
        };
    };
    /**
     * Experimental values:
     * - iOS: `{"eventCount": 0, "target": 75, "text": ""}`
     * - Android: `{"target": 53}`
     */
    focus: () => {
        nativeEvent: {
            target: number;
        };
    };
    /**
     * Experimental values:
     * - iOS: `{"eventCount": 0, "target": 75, "text": ""}`
     * - Android: `{"target": 53}`
     */
    blur: () => {
        nativeEvent: {
            target: number;
        };
    };
};
export {};
